import React from 'react';
import { mergeStyleSets } from '@fluentui/react/lib/Styling';
import Footer from '../common/Footer';
import image1 from '../images/image 1.jpg';
import image2 from '../images/image 2.jpg';
import image3 from '../images/image 3.jpg';
import image4 from '../images/image 4.jpg';
import image5 from '../images/image 5.jpg';

const useStyles = mergeStyleSets({
  root: {
    backgroundColor: '#fff',
    color: '#333',
  },
  hero: {
    background: 'linear-gradient(135deg, #ff6b35, #ff9a56)',
    color: '#fff',
    padding: '80px 20px',
    textAlign: 'center',
  },
  heroTitle: {
    fontSize: 48,
    fontWeight: 800,
    marginBottom: 20,
  },
  heroSubtitle: {
    fontSize: 24,
    fontWeight: 300,
    maxWidth: 800,
    margin: '0 auto',
  },
  section: {
    padding: '80px 20px',
    textAlign: 'center',
  },
  sectionTitle: {
    fontSize: 36,
    fontWeight: 700,
    marginBottom: 20,
    color: '#c62828',
  },
  sectionSubtitle: {
    fontSize: 18,
    color: '#666',
    marginBottom: 60,
    maxWidth: 800,
    margin: '0 auto 60px auto',
  },
  servicesGrid: {
    display: 'grid',
    gridTemplateColumns: 'repeat(auto-fit, minmax(300px, 1fr))',
    gap: 40,
    maxWidth: 1200,
    margin: '0 auto',
  },
  serviceCard: {
    padding: 30,
    backgroundColor: '#fff',
    borderRadius: 16,
    boxShadow: '0 8px 24px rgba(0,0,0,0.1)',
    transition: 'transform 0.3s ease, box-shadow 0.3s ease',
    border: '1px solid #f0f0f0',
    ':hover': {
      transform: 'translateY(-8px)',
      boxShadow: '0 16px 32px rgba(0,0,0,0.15)',
    },
  },
  serviceIcon: {
    fontSize: 48,
    marginBottom: 20,
    color: '#ff6b35',
  },
  serviceTitle: {
    fontSize: 24,
    fontWeight: 600,
    marginBottom: 15,
    color: '#333',
  },
  serviceDescription: {
    fontSize: 16,
    lineHeight: 1.6,
    color: '#666',
    marginBottom: 20,
  },
  serviceFeatures: {
    textAlign: 'left',
    fontSize: 14,
    color: '#777',
  },
  gallerySection: {
    backgroundColor: '#f8f9fa',
  },
  galleryGrid: {
    display: 'grid',
    gridTemplateColumns: 'repeat(auto-fit, minmax(250px, 1fr))',
    gap: 20,
    maxWidth: 1200,
    margin: '0 auto',
  },
  galleryItem: {
    borderRadius: 12,
    overflow: 'hidden',
    boxShadow: '0 4px 12px rgba(0,0,0,0.1)',
    transition: 'transform 0.3s ease',
    ':hover': {
      transform: 'scale(1.05)',
    },
  },
  galleryImage: {
    width: '100%',
    height: 250,
    objectFit: 'cover',
  },
  pricingSection: {
    backgroundColor: '#fff',
  },
  pricingGrid: {
    display: 'grid',
    gridTemplateColumns: 'repeat(auto-fit, minmax(280px, 1fr))',
    gap: 30,
    maxWidth: 1000,
    margin: '0 auto',
  },
  pricingCard: {
    padding: 40,
    backgroundColor: '#fff',
    borderRadius: 16,
    boxShadow: '0 8px 24px rgba(0,0,0,0.1)',
    border: '2px solid #f0f0f0',
    textAlign: 'center',
    transition: 'transform 0.3s ease, border-color 0.3s ease',
    ':hover': {
      transform: 'translateY(-5px)',
      borderColor: '#ff6b35',
    },
  },
  pricingTitle: {
    fontSize: 24,
    fontWeight: 600,
    marginBottom: 10,
    color: '#333',
  },
  pricingPrice: {
    fontSize: 32,
    fontWeight: 800,
    color: '#ff6b35',
    marginBottom: 20,
  },
  pricingFeatures: {
    textAlign: 'left',
    fontSize: 14,
    color: '#666',
    lineHeight: 1.8,
  },
});

const Services: React.FC = () => {
  const classes = useStyles;

  const services = [
    {
      icon: 'ЁЯОк',
      title: 'рдЧрдгреЗрд╢реЛрддреНрд╕рд╡ рдЖрдпреЛрдЬрди',
      description: 'рд╕рдВрдкреВрд░реНрдг рдЧрдгреЗрд╢реЛрддреНрд╕рд╡рд╛рдЪреЗ рд╡реНрдпрд╛рд╡рд╕рд╛рдпрд┐рдХ рдЖрдпреЛрдЬрди рдЖрдореНрд╣реА рдХрд░рддреЛ.',
      features: [
        'тАв рдордВрдбрдк рдирд┐рд░реНрдорд┐рддреА рдЖрдгрд┐ рд╕рдЬрд╛рд╡рдЯ',
        'тАв рдзреНрд╡рдирд┐ рд╡ рдкреНрд░рдХрд╛рд╢ рд╡реНрдпрд╡рд╕реНрдерд╛',
        'тАв рд╕рд╛рдВрд╕реНрдХреГрддрд┐рдХ рдХрд╛рд░реНрдпрдХреНрд░рдо рдЖрдпреЛрдЬрди',
        'тАв рд╕реБрд░рдХреНрд╖рд╛ рд╡реНрдпрд╡рд╕реНрдерд╛',
      ],
    },
    {
      icon: 'ЁЯУ╕',
      title: 'рдЫрд╛рдпрд╛рдЪрд┐рддреНрд░рдг рд╕реЗрд╡рд╛',
      description: 'рдЧрдгреЗрд╢реЛрддреНрд╕рд╡рд╛рдЪреНрдпрд╛ рдкреНрд░рддреНрдпреЗрдХ рдХреНрд╖рдгрд╛рдЪреЗ рд╡реНрдпрд╛рд╡рд╕рд╛рдпрд┐рдХ рдЫрд╛рдпрд╛рдЪрд┐рддреНрд░рдг.',
      features: [
        'тАв HD рд╡ 4K рд╡реНрд╣рд┐рдбрд┐рдУрдЧреНрд░рд╛рдлреА',
        'тАв рдбреНрд░реЛрди рдЫрд╛рдпрд╛рдЪрд┐рддреНрд░рдг',
        'тАв рд▓рд╛рдИрд╡реНрд╣ рд╕реНрдЯреНрд░реАрдорд┐рдВрдЧ',
        'тАв рдлреЛрдЯреЛ рдПрдбрд┐рдЯрд┐рдВрдЧ рд╕реЗрд╡рд╛',
      ],
    },
    {
      icon: 'ЁЯОи',
      title: 'рдХрд▓рд╛рддреНрдордХ рд╕рдЬрд╛рд╡рдЯ',
      description: 'рдкрд╛рд░рдВрдкрд░рд┐рдХ рдЖрдгрд┐ рдЖрдзреБрдирд┐рдХ рдХрд▓рд╛рдХреГрддреАрдВрдЪрд╛ рдЕрдкреНрд░рддрд┐рдо рдореЗрд│.',
      features: [
        'тАв рдереАрдо рдЖрдзрд╛рд░рд┐рдд рдбрд┐рдЭрд╛рдЗрди',
        'тАв рдлреБрд▓рд╛рдВрдЪреА рд╕рдЬрд╛рд╡рдЯ',
        'тАв LED рдбрд┐рд╕реНрдкреНрд▓реЗ',
        'тАв рдЗрдХреЛ-рдлреНрд░реЗрдВрдбрд▓реА рдордЯреЗрд░рд┐рдпрд▓',
      ],
    },
    {
      icon: 'ЁЯО╡',
      title: 'рд╕рд╛рдВрд╕реНрдХреГрддрд┐рдХ рдХрд╛рд░реНрдпрдХреНрд░рдо',
      description: 'рднрдХреНрддрд┐рдЧреАрддреЗ, рдиреГрддреНрдп рдЖрдгрд┐ рдирд╛рдЯрдХрд╛рдВрдЪреЗ рдЖрдпреЛрдЬрди.',
      features: [
        'тАв рд╕реНрдерд╛рдирд┐рдХ рдХрд▓рд╛рдХрд╛рд░рд╛рдВрдирд╛ рдкреНрд░реЛрддреНрд╕рд╛рд╣рди',
        'тАв рд╢рд╛рд╕реНрддреНрд░реАрдп рд╕рдВрдЧреАрдд рдХрд╛рд░реНрдпрдХреНрд░рдо',
        'тАв рдмрд╛рд▓ рдХрд▓рд╛рд╡рдВрддрд╛рдВрдЪреЗ рд╕рд╛рджрд░реАрдХрд░рдг',
        'тАв рдЗрдВрдЯрд░реИрдХреНрдЯрд┐рд╡реНрд╣ рдХрд╛рд░реНрдпрдХреНрд░рдо',
      ],
    },
    {
      icon: 'ЁЯУЪ',
      title: 'рд╕реНрдорд░рдгрд┐рдХрд╛ рдирд┐рд░реНрдорд┐рддреА',
      description: 'рдЧрдгреЗрд╢реЛрддреНрд╕рд╡рд╛рдЪреНрдпрд╛ рдЖрдард╡рдгреАрдВрдЪреА рд╕реБрдВрджрд░ рд╕реНрдорд░рдгрд┐рдХрд╛.',
      features: [
        'тАв рдбрд┐рдЬрд┐рдЯрд▓ рдЖрдгрд┐ рдкреНрд░рд┐рдВрдЯ рдЕрд▓реНрдмрдо',
        'тАв рдкрд░реНрд╕рдирд▓рд╛рдЗрдЬреНрдб рдбрд┐рдЭрд╛рдЗрди',
        'тАв рд╣рд╛рдп рдХреНрд╡рд╛рд▓рд┐рдЯреА рдкреНрд░рд┐рдВрдЯрд┐рдВрдЧ',
        'тАв рдСрдирд▓рд╛рдЗрди рд╢реЗрдЕрд░рд┐рдВрдЧ',
      ],
    },
    {
      icon: 'ЁЯМ▒',
      title: 'рдкрд░реНрдпрд╛рд╡рд░рдг рд╕рдВрд╡рд░реНрдзрди',
      description: 'рдЗрдХреЛ-рдлреНрд░реЗрдВрдбрд▓реА рдЧрдгреЗрд╢реЛрддреНрд╕рд╡рд╛рдЪреЗ рдЖрдпреЛрдЬрди.',
      features: [
        'тАв рдорд╛рддреАрдЪреНрдпрд╛ рдЧрдгреЗрд╢рдореВрд░реНрддреАрдВрдЪрд╛ рд╡рд╛рдкрд░',
        'тАв рдиреИрд╕рд░реНрдЧрд┐рдХ рд░рдВрдЧрд╛рдВрдЪреА рд╕рдЬрд╛рд╡рдЯ',
        'тАв рдХрдЪрд░рд╛ рд╡реНрдпрд╡рд╕реНрдерд╛рдкрди',
        'тАв рд╡реГрдХреНрд╖рд╛рд░реЛрдкрдг рдореЛрд╣реАрдо',
      ],
    },
  ];

  const galleryImages = [image1, image2, image3, image4, image5];

  const pricingPlans = [
    {
      title: 'рдмреЗрд╕рд┐рдХ рдкреЕрдХреЗрдЬ',
      price: 'тВ╣25,000',
      features: [
        'тАв рдЫреЛрдЯреЗ рдордВрдбрдк рдирд┐рд░реНрдорд┐рддреА',
        'тАв рдмреЗрд╕рд┐рдХ рд╕рдЬрд╛рд╡рдЯ',
        'тАв рдлреЛрдЯреЛрдЧреНрд░рд╛рдлреА (4 рддрд╛рд╕)',
        'тАв рд╕рд░рд│ рдзреНрд╡рдирд┐ рд╡реНрдпрд╡рд╕реНрдерд╛',
        'тАв рдбрд┐рдЬрд┐рдЯрд▓ рдЕрд▓реНрдмрдо',
      ],
    },
    {
      title: 'рд╕реНрдЯрдБрдбрд░реНрдб рдкреЕрдХреЗрдЬ',
      price: 'тВ╣50,000',
      features: [
        'тАв рдордзреНрдпрдо рдордВрдбрдк рдирд┐рд░реНрдорд┐рддреА',
        'тАв рдереАрдо рдЖрдзрд╛рд░рд┐рдд рд╕рдЬрд╛рд╡рдЯ',
        'тАв рдлреЛрдЯреЛ + рд╡реНрд╣рд┐рдбрд┐рдУрдЧреНрд░рд╛рдлреА',
        'тАв рдЙрдиреНрдирдд рдзреНрд╡рдирд┐ рд╡реНрдпрд╡рд╕реНрдерд╛',
        'тАв рд▓рд╛рдЗрд╡реНрд╣ рд╕реНрдЯреНрд░реАрдорд┐рдВрдЧ',
        'тАв рдлрд┐рдЬрд┐рдХрд▓ рдЕрд▓реНрдмрдо',
      ],
    },
    {
      title: 'рдкреНрд░реАрдорд┐рдпрдо рдкреЕрдХреЗрдЬ',
      price: 'тВ╣1,00,000',
      features: [
        'тАв рдореЛрдареЗ рдордВрдбрдк рдирд┐рд░реНрдорд┐рддреА',
        'тАв рд▓рдХреНрдЭрд░реА рд╕рдЬрд╛рд╡рдЯ',
        'тАв рд╕рдВрдкреВрд░реНрдг рдХрд╡реНрд╣рд░реЗрдЬ',
        'тАв рдкреНрд░реЛрдлреЗрд╢рдирд▓ рд▓рд╛рдЗрдЯрд┐рдВрдЧ',
        'тАв рд╕рд╛рдВрд╕реНрдХреГрддрд┐рдХ рдХрд╛рд░реНрдпрдХреНрд░рдо',
        'тАв рдХрд╕реНрдЯрдо рд╕реНрдорд░рдгрд┐рдХрд╛',
      ],
    },
  ];

  return (
    <>
      <div className={classes.root}>
        <div className={classes.hero}>
          <h1 className={classes.heroTitle}>рдЖрдордЪреНрдпрд╛ рд╕реЗрд╡рд╛</h1>
          <p className={classes.heroSubtitle}>
            рдЧрдгреЗрд╢реЛрддреНрд╕рд╡рд╛рдЪреНрдпрд╛ рдкреНрд░рддреНрдпреЗрдХ рдХреНрд╖рдгрд╛рд▓рд╛ рдпрд╛рджрдЧрд╛рд░ рдмрдирд╡рдгреНрдпрд╛рд╕рд╛рдареА рдЖрдореНрд╣реА рдЖрд╣реЛрдд рддреБрдордЪреНрдпрд╛ рд╕реЗрд╡реЗрдд
          </p>
        </div>

        <div className={`${classes.section}`}>
          <h2 className={classes.sectionTitle}>рдЖрдордЪреНрдпрд╛ рдореБрдЦреНрдп рд╕реЗрд╡рд╛</h2>
          <p className={classes.sectionSubtitle}>
            рдЧрдгреЗрд╢реЛрддреНрд╕рд╡рд╛рдкрд╛рд╕реВрди рддреЗ рд╡реГрдХреНрд╖рд╛рд░реЛрдкрдгрд╛рдкрд░реНрдпрдВрдд - рдЖрдореНрд╣реА рдкреНрд░рддреНрдпреЗрдХ рд╕реЗрд╡реЗрдд рдЙрддреНрдХреГрд╖реНрдЯрддрд╛ рдЖрдгрддреЛ
          </p>
          <div className={classes.servicesGrid}>
            {services.map((service, index) => (
              <div key={index} className={classes.serviceCard}>
                <div className={classes.serviceIcon}>{service.icon}</div>
                <h3 className={classes.serviceTitle}>{service.title}</h3>
                <p className={classes.serviceDescription}>{service.description}</p>
                <div className={classes.serviceFeatures}>
                  {service.features.map((feature, idx) => (
                    <div key={idx}>{feature}</div>
                  ))}
                </div>
              </div>
            ))}
          </div>
        </div>

        <div className={`${classes.section} ${classes.gallerySection}`}>
          <h2 className={classes.sectionTitle}>рдЖрдордЪреЗ рдХрд╛рд░реНрдпрд╛рдЪреЗ рдирдореБрдиреЗ</h2>
          <p className={classes.sectionSubtitle}>
            рдорд╛рдЧреАрд▓ рд╡рд░реНрд╖рд╛рдВрддреАрд▓ рдХрд╛рд╣реА рдЙрддреНрдХреГрд╖реНрдЯ рдХреНрд╖рдгрд╛рдВрдЪреА рдЭрд▓рдХ
          </p>
          <div className={classes.galleryGrid}>
            {galleryImages.map((image, index) => (
              <div key={index} className={classes.galleryItem}>
                <img 
                  src={image} 
                  alt={`рдЧрдгреЗрд╢реЛрддреНрд╕рд╡ рдЫрд╛рдпрд╛рдЪрд┐рддреНрд░ ${index + 1}`} 
                  className={classes.galleryImage}
                />
              </div>
            ))}
          </div>
        </div>

        <div className={`${classes.section} ${classes.pricingSection}`}>
          <h2 className={classes.sectionTitle}>рдЖрдордЪреЗ рдкреЕрдХреЗрдЬреЗрд╕</h2>
          <p className={classes.sectionSubtitle}>
            рддреБрдордЪреНрдпрд╛ рдЧрд░рдЬреЗрдиреБрд╕рд╛рд░ рдЖрдгрд┐ рдмрдЬреЗрдЯрдиреБрд╕рд╛рд░ рдпреЛрдЧреНрдп рдкреЕрдХреЗрдЬ рдирд┐рд╡рдбрд╛
          </p>
          <div className={classes.pricingGrid}>
            {pricingPlans.map((plan, index) => (
              <div key={index} className={classes.pricingCard}>
                <h3 className={classes.pricingTitle}>{plan.title}</h3>
                <div className={classes.pricingPrice}>{plan.price}</div>
                <div className={classes.pricingFeatures}>
                  {plan.features.map((feature, idx) => (
                    <div key={idx} style={{lineHeight: 1.8}}>{feature}</div>
                  ))}
                </div>
              </div>
            ))}
          </div>
        </div>
      </div>

      <Footer />
    </>
  );
};

export default Services;
